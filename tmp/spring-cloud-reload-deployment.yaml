apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=cloud-kubernetes-reload&var-version=0.0.1-SNAPSHOT
  creationTimestamp: 2017-11-16T12:37:04Z
  generation: 2
  labels:
    group: com.sprinthive.starter
    project: cloud-kubernetes-reload
    provider: fabric8
    version: 0.0.1-SNAPSHOT
  name: spring-cloud-reload
  namespace: default
  resourceVersion: "32792"
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/spring-cloud-reload
  uid: d9e065d2-caca-11e7-946d-0800273d8376
spec:
  replicas: 1
  selector:
    matchLabels:
      group: com.sprinthive.starter
      project: cloud-kubernetes-reload
      provider: fabric8
      version: 0.0.1-SNAPSHOT
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=cloud-kubernetes-reload&var-version=0.0.1-SNAPSHOT
      creationTimestamp: null
      labels:
        group: com.sprinthive.starter
        project: cloud-kubernetes-reload
        provider: fabric8
        version: 0.0.1-SNAPSHOT
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: starter/cloud-kubernetes-reload:snapshot-171116-144640-0419
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2017-11-16T12:37:04Z
    lastUpdateTime: 2017-11-16T12:37:04Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
