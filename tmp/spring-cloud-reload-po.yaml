apiVersion: v1
kind: Pod
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=cloud-kubernetes-reload&var-version=0.0.1-SNAPSHOT
    kubernetes.io/created-by: |
      {"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"spring-cloud-reload-7497796c84","uid":"326169ff-cacc-11e7-946d-0800273d8376","apiVersion":"extensions","resourceVersion":"32736"}}
  creationTimestamp: 2017-11-16T12:46:42Z
  generateName: spring-cloud-reload-7497796c84-
  labels:
    group: com.sprinthive.starter
    pod-template-hash: "3053352740"
    project: cloud-kubernetes-reload
    provider: fabric8
    version: 0.0.1-SNAPSHOT
  name: spring-cloud-reload-7497796c84-hwv66
  namespace: default
  ownerReferences:
  - apiVersion: extensions/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: spring-cloud-reload-7497796c84
    uid: 326169ff-cacc-11e7-946d-0800273d8376
  resourceVersion: "32789"
  selfLink: /api/v1/namespaces/default/pods/spring-cloud-reload-7497796c84-hwv66
  uid: 32659a27-cacc-11e7-946d-0800273d8376
spec:
  containers:
  - env:
    - name: KUBERNETES_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: starter/cloud-kubernetes-reload:snapshot-171116-144640-0419
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 180
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: spring-boot
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    - containerPort: 9779
      name: prometheus
      protocol: TCP
    - containerPort: 8778
      name: jolokia
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      privileged: false
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-ckjj8
      readOnly: true
  dnsPolicy: ClusterFirst
  nodeName: minikube
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  volumes:
  - name: default-token-ckjj8
    secret:
      defaultMode: 420
      secretName: default-token-ckjj8
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: 2017-11-16T12:46:42Z
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: 2017-11-16T12:47:03Z
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: 2017-11-16T12:46:42Z
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://fe6313109f4a625c314658ad7ff8f7733026c6d933703d15ae614719042ed111
    image: starter/cloud-kubernetes-reload:latest
    imageID: docker://sha256:ac60571a74a55ab7b6937cb3864e297f5e771998d8101a9edb08e6e72e2441ff
    lastState: {}
    name: spring-boot
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: 2017-11-16T12:46:43Z
  hostIP: 192.168.99.100
  phase: Running
  podIP: 172.17.0.5
  qosClass: BestEffort
  startTime: 2017-11-16T12:46:42Z
